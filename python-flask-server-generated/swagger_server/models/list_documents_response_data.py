# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.document_details import DocumentDetails  # noqa: F401,E501
from swagger_server import util


class ListDocumentsResponseData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, docs: List[DocumentDetails]=None, total: int=None):  # noqa: E501
        """ListDocumentsResponseData - a model defined in Swagger

        :param docs: The docs of this ListDocumentsResponseData.  # noqa: E501
        :type docs: List[DocumentDetails]
        :param total: The total of this ListDocumentsResponseData.  # noqa: E501
        :type total: int
        """
        self.swagger_types = {
            'docs': List[DocumentDetails],
            'total': int
        }

        self.attribute_map = {
            'docs': 'docs',
            'total': 'total'
        }
        self._docs = docs
        self._total = total

    @classmethod
    def from_dict(cls, dikt) -> 'ListDocumentsResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListDocumentsResponse_data of this ListDocumentsResponseData.  # noqa: E501
        :rtype: ListDocumentsResponseData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def docs(self) -> List[DocumentDetails]:
        """Gets the docs of this ListDocumentsResponseData.


        :return: The docs of this ListDocumentsResponseData.
        :rtype: List[DocumentDetails]
        """
        return self._docs

    @docs.setter
    def docs(self, docs: List[DocumentDetails]):
        """Sets the docs of this ListDocumentsResponseData.


        :param docs: The docs of this ListDocumentsResponseData.
        :type docs: List[DocumentDetails]
        """

        self._docs = docs

    @property
    def total(self) -> int:
        """Gets the total of this ListDocumentsResponseData.


        :return: The total of this ListDocumentsResponseData.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total: int):
        """Sets the total of this ListDocumentsResponseData.


        :param total: The total of this ListDocumentsResponseData.
        :type total: int
        """

        self._total = total
